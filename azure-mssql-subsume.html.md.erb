---
title: Subsuming a Microsoft Azure Service Broker MSSQL Database Instance
owner: Cloud Service Broker
---

<strong><%= modified_date %></strong>

This topic describes moving an MSSQL database instance
from the Microsoft Azure Service Broker for VMware Tanzu tile
to the Cloud Service Broker on Azure tile.

This process of moving control of an instance from the control of one broker tile
to another is called _subsuming_ the instance.

## <a id='about'></a> About Subsuming MSSQL Database Instance

Because the Microsoft Azure Service (MAS) Broker for VMware Tanzu tile
is going out of support, it is important to move MSSQL database instances that 
were created by the MAS Broker over to the Cloud Service Broker.

Subsuming the instance allows you to move the database from the control of one broker
to the control of another without migrating the data.

After the subsuming process, you can manage the instance and the associate MSSQL database
just like any other service instance.

For general information about the Microsoft Azure Service Broker for VMware Tanzu tile,
see [Azure Service Broker](https://docs.pivotal.io/partners/azure-sb/index.html).

## <a id='process'></a> Overview of the Process

Detailed steps for subsuming are given below.
However, the outline of the process is:

+ Create a new Cloud Service-brokered instance,
  importing information about the MSSQL database.
+ Unbind apps from the old MAS-brokered instance.
+ Bind apps to the new Cloud Service-brokered instance.
+ Purge the connections between the old MAS-brokered instance and the MSSQL database.


##<a id="prereq"></a> Prerequisite

Before you can subsume an MSSQL database instance,
you must have the admin password for the database.

Unfortunately, this password cannot be automatically discovered.
This was probably set when the server was created.
See [Broker Config](https://docs.pivotal.io/partners/azure-sb/installing.html#broker-config).

## <a id='subsume'></a> Subsume a Microsoft Azure Service Broker MSSQL Database Instance

To subsume control of an existing MAS-brokered MSSQL database instance to 
the Cloud Service Broker:

1. Get the MAS-brokered database instance details by running:


    ```
    cf service MASB-SERVICE-INSTANCE
    ```

    Where is `MASB-SERVICE-INSTANCE` is the name of the service instance,
    the MAS-brokered database instance.

    For example:

    <pre class="terminal">$ cf service masb-instance
    Showing info of service <masb instance> in org ...

    name:            masb-instance
    service:         azure-sqldb
    tags:
    plan:            basic
    description:     Azure SQL Database Service
    documentation:
    dashboard:

    Showing status of last operation from service masb-instance...

    status:    create succeeded
    message:   Created logical database database-name on logical server server-name.
    started:   2020-08-20T21:06:57Z
    updated:   2020-08-20T21:08:04Z
    </pre>


2. Get the Azure resource ID for the database by running the following on the Azure CLI:

    ```
    az sql db show  --name DATABASE-NAME --server SERVER-NAME \
    --resource-group SERVER-RESOURCE-GROUP --query id -o tsv
    ```

    Where:
    * `DATABASE-NAME` and `SERVER-NAME` are the logical names output in the step above.
    * `SERVER-RESOURCE-GROUP` is the **Default Resource Group** in the Default Parameters Config pane
      of the Azure Service Broker tile.
      See [Default Parameters Config](https://docs.pivotal.io/partners/azure-sb/installing.html#defaultparameters-config)
      in _Installing and Configuring Microsoft Azure Service Broker_.

    For example:

    <pre class="terminal">
    $ az sql db show  --name database-name --server server-name \
      --resource-group azure-service-broker --query id -o tsv
    </pre>

3. Create a new service instance of the Cloud Service Broker type and
   import the current state of the service instance by running:

    <code> cf create-service csb-masb-mssql-db-subsume current NEW-SERVICE-INSTANCE -c '{"admin_password":"SERVER-ADMIN-PASSWORD", "azure_db_id", "AZURE-RESOURCE-ID"}'</code>

    Where:
    * `NEW-SERVICE-INSTANCE` is the name of the new service instance
       that Cloud Service Broker creates to replace the MSAB service instance.
    * `SERVER-ADMIN-PASSWORD` is the admin password for the database.
       See [Prerequisite](#prereq) above.
    * `AZURE-RESOURCE-ID` is found in the output of step 2 above.


    For example:

    <pre class="terminal">
$ cf create-service csb-masb-mssql-db-subsume current secondary-db -c \
 '{"admin_password":"PA55W0RD","azure_db_id":"/subscriptions/e53f/resourceGroups/broker/providers/Microsoft.Sql/servers/2796-4bed-a2a3-d1691fbba143-secondary/databases/csb-db"}'
    </pre>


4. Disconnect the app from the MASB service binding by running:

    <code>cf unbind-service EXISTING-APP MASB-SERVICE-INSTANCE</code>

    Where:
    * `EXISTING-APP` is the app using the database.
    * `MASB-SERVICE-INSTANCE` is the name of the service instance,
    the MAS-brokered database instance.

    <pre class="terminal">
$ cf unbind-service my-app masb-instance
    </pre>

5. Bind the app to the new service instance by running:

    <code>cf bind-service EXISTING-APP NEW-SERVICE-INSTANCE</code>

    Where `NEW-SERVICE-INSTANCE` is the name of the Cloud Service Broker service instance
    that you created in step 3 above.

    For example:

    <pre class="terminal">$cf bind-service my-app secondary-db </pre>

1. Remove record of the old MAS-brokered database instance and any child objects
   from Cloud Foundry by running:

    ```
    cf purge-service-instance MASB-SERVICE-INSTANCE
    ```

    For example:

    <pre class="terminal">$ cf purge-service-instance mas-instance</pre>

    <p class="note warning"><strong> Warning:</strong> Do not run <code>cf delete-service</code>
    because then the Microsoft Azure Service Broker deletes the Azure MSSQL resource, that is, the database.
</p>

## <a id="next-steps"></a> Next Steps

When all MAS-brokered service instances have been moved to Cloud Service-brokered instances,
you can uninstall the Microsoft Azure Service Broker for VMware Tanzu tile
from Ops Manager.
