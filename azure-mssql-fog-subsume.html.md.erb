---
title: Subsuming a Microsoft Azure Service Broker MSSQL Failover Group Instance
owner: Cloud Service Broker
---

<strong><%= modified_date %></strong>


This topic describes moving a MSSQL database Failover Group (FoG) instance from the Microsoft Azure
Service Broker for VMware Tanzu tile to the <%= vars.product_full %> tile.

This process of moving control of an instance from one broker tile, in this case the legacy MSSQL
broker tile, to another is called _subsuming_ the instance.


## <a id='about'></a> About Subsuming an MSSQL Database Failover Group (FoG) Instance

Because the Microsoft Azure Service Broker (MASB) for VMware Tanzu tile
is going out of support, it is important to move MSSQL database FoG instances that
were created by the MASB over to the <%= vars.product_short %>.

Subsuming the instance allows you to move the database from the control of one broker
to the control of another without migrating the data.

After the subsuming process, you can manage the instance and the associated MSSQL FoG database
just like any other service instance.

For general information about the Microsoft Azure Service Broker for VMware Tanzu tile,
see [Azure Service Broker](https://docs.pivotal.io/partners/azure-sb/index.html).


## <a id='process'></a> Overview of the Process

Detailed steps for subsuming are given below.
However, the outline of the process is:

+ Create a new Cloud Service-brokered instance.
+ Import information about the MSSQL FoG database instance using the "subsume" plan
in the Cloud Foundry Marketplace.
+ Unbind apps from the old MAS-brokered instance.
+ Bind apps to the new <%= vars.product_short %> instance.
+ Purge the connections between the old MAS-brokered instance and the MSSQL database.
Do not delete service instances.
+ Restage any apps which were connected to the legacy FoG database.


##<a id="prereq"></a> Prerequisite

See [Broker Config](https://docs.pivotal.io/partners/azure-sb/installing.html#broker-config),
in _Installing and Configuring Microsoft Azure Service Broker_.


## <a id='subsume'></a> Subsume a Microsoft Azure Service Broker (MASB) MSSQL Database Instance

To subsume control of an existing MASB-brokered MSSQL database instance to
the <%= vars.product_short %>:

1. Get the MAS-brokered database instance details by running:

    ```
    cf service MASB-SERVICE-INSTANCE
    ```
    Where `MASB-SERVICE-INSTANCE` is the name of the MAS-brokered database instance.
    <br><br>
    For example:

    <pre class="terminal">$ cf service masb-instance
    Showing info of service <masb instance> in org ...

    name:            masb-instance
    service:         azure-sqldb
    tags:
    plan:            basic
    description:     Azure SQL Database Service
    documentation:
    dashboard:

    Showing status of last operation from service masb-instance...

    status:    create succeeded
    message:   Created logical database my-database on logical server my-server.
    started:   2020-08-20T21:06:57Z
    updated:   2020-08-20T21:08:04Z
    </pre>

    Three identities are necessary: <%# Necessary for what? %>
    * The FoG resource
    * The primary database identity
    * The secondary database identity

1. Get the MASB-brokered FoG instance details by running:

    ```
    cf service MASB-SERVICE-INSTANCE
    ```
    Where is `MASB-SERVICE-INSTANCE` is the name of the service instance, the MAS-brokered database
    instance.

    For example:
```
cf service masb-fog-db-80124
Showing info of service masb-fog-db-80124 in org pivotal / space ernie as admin...

name:            masb-fog-db-80124
service:         azure-sqldb-failover-group
tags:
plan:            SecondaryDatabaseWithFailoverGroup
description:     Azure SQL Database Failover Group Service
documentation:
dashboard:

Showing status of last operation from service masb-fog-db-80124...

status:    create succeeded
message:   Created failover group masb-fog-db-80124.
started:   2020-11-11T00:39:40Z
updated:   2020-11-11T00:41:44Z

There are no bound apps for this service.
```<%# Define any non-obvious placeholders present in the code snippet in the style of |Where PLACEHOLDER is...| %>

2. Get the Azure resource IDs for the FoG and it's databases by running the following on the Azure CLI:

    Primary database ID:
    ```<%# Put a newline between the stem and the opening code tag. %>
    az sql failover-group show --name FOG-NAME --server PRIMARY-SERVER-NAME --resource-group FOG-RESOURCE-GROUP --query databases[0] -o tsv
    ```
    Secondary database ID:
    ```<%# Put a newline between the stem and the opening code tag. %>
    az sql failover-group show --name FOG-NAME --server SECONDARY-SERVER-NAME --resource-group FOG-RESOURCE-GROUP --query databases[0] -o tsv
    ```
    FoG ID:
    ```<%# Put a newline between the stem and the opening code tag. %>
    az sql failover-group show --name FOG-NAME --server PRIMARY-SERVER-NAME --resource-group FOG-RESOURCE-GROUP --query id -o tsv
    ```

    Where<%# Place |Where| immediately below the closing code tag. %>:
    * `FOG-NAME` is the logical name in the `message` line of the output in the step above.
    * `FOG-RESOURCE-GROUP` is the **Default Resource Group** in the Default Parameters Config<%# |config| is preferred. %> pane  o<%# Delete the double space. %>f the Azure Service Broker tile.
      See [Default Parameters Config](https://docs.pivotal.io/partners/azure-sb/installing.html#defaultparameters-config)
      in _Installing and Configuring Microsoft Azure Service Broker_.
    * `PRIMARY-SERVER-NAME` and `SECONDARY-SERVER-NAME` are the server names joined to the FoG, it may<%# |can| usually works better. Use |might| to convey possibility. %> be necessary to consult the Azure portal to find these


    For example:

    <pre class="terminal">
    $ az sql failover-group show  --name fog-name --server server-name \
      --resource-group azure-service-broker --query id -o tsv
    </pre>

    The variable in the next step, `AZURE-RESOURCE-ID`, refers to the output of this command in full. An example output has been<%# Consider changing to |is| or |has| or rewrite for active voice. %> provided below

    ```
    /subscriptions/000abc00-0000-00ab-0abc-00000000/resourceGroups/resource-group/providers/Microsoft.Sql/servers/server-name/databases/database-name
    ```
3. Create a new MSSQL service instance using Cloud Service Broker<%# Use <%= vars.product_short or, if in alt text, #{vars.product_short} %>  a<%# Delete the double space. %>nd
   import the existing MSSQL FoG resource by choosing the "subsume" plan and including the metadata as shown:

      <%# Indent 0, 4, 8, or 12 spaces. %>```
     cf create-service csb-azure-mssql-db-failover-group subsume NEW-SERVICE-INSTANCE<%# |SERVICE-INSTANCE-NAME| is preferred. %> -c
        '{
   "azure_primary_db_id": "PRIMARY-AZURE-DB<%# |database| is preferred. %>-ID",
    "azure_secondary_db_id": "SECONDARY-AZURE-DB<%# |database| is preferred. %>-ID",
      "auzure_fog_id": "FOG-AZURE-ID",
      "server_pair": "FOG-SERVER-PAIR"
   }'
     <%# Indent 0, 4, 8, or 12 spaces. %>```

    Where<%# Place |Where| immediately below the closing code tag. %>:
    * `NEW-SERVICE-INSTANCE<%# |SERVICE-INSTANCE-NAME| is preferred. %>` is a name you choose for the new service instance
       that creates to replace the MSAB service instance.
    * `SERVER-ADMIN-PASSWORD` is the admin password for the database.
       See Prerequisite Section above.
    * `PRIMARY-AZURE-DB-ID` , `SECONDARY-AZURE-DB-ID` and `FOG-AZURE-ID` are found in the outputs of step 2 above.

4. Disconnect the app from the MASB service binding by running:

    ```
    cf unbind-service APP-NAME MASB-SERVICE-INSTANCE<%# |SERVICE-INSTANCE-NAME| is preferred. %>
    ```

    Where<%# Place |Where| immediately below the closing code tag. %>:
    * `APP-NAME` is the app using the database.
    * `MASB-SERVICE-INSTANCE<%# |SERVICE-INSTANCE-NAME| is preferred. %>` is the name of the MAS-brokered database instance.

    For example:
    <pre class="terminal">
$ cf unbind-service my-app masb-instance
    </pre>

5. Bind the app to the new service instance by running:

    ```
    cf bind-service APP-NAME NEW-SERVICE-INSTANCE<%# |SERVICE-INSTANCE-NAME| is preferred. %>
    ```

    Where<%# Place |Where| immediately below the closing code tag. %> `NEW-SERVICE-INSTANCE<%# |SERVICE-INSTANCE-NAME| is preferred. %>` is the name of the <%= vars.product_short %> service instance
    that you created in step 3 above.
    <br><br>
    For example:

    <pre class="terminal">$ cf bind-service my-app secondary-db </pre>

    Because <%= vars.product_short %> creates new credentials at bind time,
    this creates new binding credentials for the app.

6. Restage the app:

    ```
    cf restage APP-NAME
    ```

1. Remove record of the old MAS-brokered database instance and any child objects
   from Cloud Foundry by running:

    ```
    cf purge-service-instance MASB-SERVICE-INSTANCE<%# |SERVICE-INSTANCE-NAME| is preferred. %>
    ```

    For example:

    <pre class="terminal">$ cf purge-service-instance masb-instance</pre>

    <p class="note warning">
      <strong> Warning:</strong> Do not run <code>cf delete-service</code>
      because then the Microsoft Azure Service Broker deletes the Azure MSSQL
      resource, that is, the database.
    </p>


## <a id="next-steps"></a> Next Steps

When all MAS-brokered service instances for all apps have been<%# Consider replacing with |were| or shifting to present tense. %> moved to Cloud Service-brokered instances,
you can uninstall the Microsoft Azure Service Broker for VMware Tanzu tile
from <%= vars.ops_manager %>.
