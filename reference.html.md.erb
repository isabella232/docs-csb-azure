---
title: Service Plan Reference
owner: Cloud Service Broker
---

<strong><%= modified_date %></strong>

This topic provides reference information about the plans and configuration
parameters used for configuring services.


<%# Is there a logical order for the sections in this topic? Which will is the most generic? Which will be most used? %>
## <a id="azure-mssql"></a> Azure SQL (MSSQL)

This section applies to the csb-azure-mssql service.
This section lists default plans and configuration options for Azure SQL on Azure.

### <a id="azure-mssql-plans"></a> Plans

The table below lists the plans for the csb-azure-mssql service:

| Plan       | CPUs | Storage Size |
|------------|------|--------------|
| small       | 2    | 50&nbsp;GB        |
| medium      | 8    | 200&nbsp;GB       |
| large       | 32   | 500&nbsp;GB       |
| extra-large | 64   | 1&nbsp;TB         |

### <a id="azure-mssql-plans-config"></a> Plan Configuration Parameters

The table below lists the plan parameters you can configure:

| Option Name | Values              | Default |
|-------------|---------------------|---------|
| max_storage_gb  |            | 50      |
| cores       | 1&ndash;64, multiple of 2 | 2       |

### <a id="azure-mssql-provision"></a> Provision Parameters

You can provision a service by running:

```
cf create-service csb-azure-mssql ... -c '{...}'
```
<%# Could this be moved to a generic section about provisioning a service?
Should the ... be replaced by a placeholder?
Should you use the parameters in the -c flag?
Can we have an example? %>

The table below lists the parameters you can configure when provisioning a csb-azure-mssql service:

| Parameter Name | Type | Description | Default  |
|----------------|------|-------------|----------|
| instance_name  |string| service instance name | csb-azsql-INSTANCE-ID |
| resource_group |string| resource group for instance | rg-INSTANCE-NAME|
| db_name        |string| database name | csb-db |
| location       |string| Azure region to deploy service instance | westus |
| azure_tenant_id | string | ID of Azure tenant for instance | config file value `azure.tenant_id` |
| azure_subscription_id | string | ID of Azure subscription for instance | config file value `azure.subscription_id` |
| azure_client_id | string | ID of Azure service principal to authenticate for instance creation | config file value `azure.client_id` |
| azure_client_secret | string | Secret (password) for Azure service principal to authenticate for instance creation | config file value `azure.client_secret` |
| sku_name | string | Azure sku (typically, tier [GP_S,GP,BC,HS] + family [Gen4,Gen5] + cores, e.g. GP_S_Gen4_1, GP_Gen5_8, see [vCore](https://docs.microsoft.com/en-us/azure/azure-sql/database/resource-limits-vcore-single-databases) and [DTU](https://docs.microsoft.com/en-us/azure/azure-sql/database/resource-limits-dtu-single-databases))Will be computed from cores if empty. `az sql db list-editions -l LOCATION -o table` will show all valid values. | |
| authorized_network | string | The Azure subnet ID (long form) that the instance is connected to through a service endpoint. The subnet must have the `Microsoft.sql` service enabled. | |
| skip_provider_registration | boolean | `true` to skip automatic Azure provider registration, set if service principal being used does not have rights to register providers | `false` |

<p class="note">
  <strong>Note:</strong> Currently Azure SQL is not available in all regions.
  <%# The enum in the YAML lists all the valid regions as of 2/12/2020. --  Which YAML? %>
</p>

<p class="note">
  <strong>Note:</strong> Azure SQL service instances use the vCore model and the Gen5
  hardware generation unless you override this default using the <code>sku_name</code> parameter.
  For more information about the vCore model, see the
  <a href="https://docs.microsoft.com/en-us/azure/sql-database/sql-database-service-tiers-vcore?tabs=azure-portal">Microsoft documentation</a>.
</p>

For the CPU/memory size mapped onto Azure SKUs, see the
[Microsoft documentation](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-vcore-resource-limits-single-databases).

#### Core to SKU Mapping

The table below shows the mapping of number of cores to the corresponding SKU:

| Cores | SKU |
|-------|-----|
| 1  | GP_Gen5_1 |
| 2  | GP_Gen5_2 |
| 4  | GP_Gen5_4 |
| 8  | GP_Gen5_8  |
| 16 | GP_Gen5_16 |
| 32 | GP_Gen5_32 |
| 80 | GP_Gen5_80 |
<%# Is this table necessary? Can we get this information from the link above? %>

<p class="note">
  <strong>Note:</strong> For the command <code>cf update-service -p PLAN-NAME</code> to work,
  the SKUs must be the same family
  <%# Clarification needed. SKUs for which things? Are these the only Compatible families? %>
  (<code>GP_S</code>, <code>GP</code>, or <code>HS</code>),
  otherwise Azure refuses the update request.
</p> <%# would this note be better in the sku_name row of the table? %>

### <a id="azure-mssql-binding-creds"></a> Binding Credentials

The format for binding credentials for Azure SQL is as follows:

```json
{
    "name" : "DATABASE NAME",
    "hostname" : "DATABASE-SERVER-HOST",
    "port" : "DATABASE-SERVER-PORT",
    "username" : "AUTHENTICATION-USERNAME",
    "password" : "AUTHENTICATION-PASSWORD",
    "uri" : "DATABASE CONNECTION-URI",
    "jdbcUrl" : "JDBC-FORMAT-CONNECTION-URI",
    "sqldbName" : "DATABASE-NAME",
    "sqlServerName" : "SERVER-NAME",
    "sqlServerFullyQualifiedDomainName" : "SERVER-FQDN",
    "databaseLogin" : "AUTHENTICATION-USERNAME",
    "databaseLoginPassword" : "AUTHENTICATION-PASSWORD"
}
```<%# Define any non-obvious placeholders present in the code snippet in the style of |Where PLACEHOLDER is...| %>



## <a id="azure-mssql-db"></a>Azure SQL (MSSQL) Database

This section applies to the service csb-azure-mssql-db.
The csb-azure-mssql-db servicde manages Azure SQL databases on pre-configured
database servers on Azure.

### <a id="azure-mssql-db-plans"></a> Plans

The table below lists the plans for the csb-azure-mssql-db service:

| Plan       | CPUs | Maximumum Storage Size |
|------------|------|--------------|
|small       | 2    | 50&nbsp;GB         |
|medium      | 8    | 200&nbsp;GB        |
|large       | 32   | 500&nbsp;GB       |
|extra-large | 80   | 1&nbsp;TB          |

### <a id="azure-mssql-db-plans-config"></a> Plan Configuration Parameters

The table below lists the plan parameters you can configure:

| Parameter Name | Values              | Default |
|-------------|------------------------|---------|
| max_storage_gb  |                    |  50      |
| cores       | 1&ndash;64, multiple of 2    | 2       |


### <a id="azure-mssql-db-provision"></a> Provision Parameters

You can provision a service by running:

```
cf create-service csb-azure-mssql-db ... -c '{...}'
```
<%# Could this be moved to a generic section about provisioning a service?
Should the ... be replaced by a placeholder?
Should you use the parameters in the -c flag?
Can we have an example? %>

The table below lists the parameters you can configure when provisioning a csb-azure-mssql-db service:

| Parameter Name | Type | Description | Default |
|----------------|------|-------------|---------|
| `db_name` | string | The database name | `csb-fog-db-INSTANCE-ID` <%# I assumed that *instance_id* was a place holder. Is this correct? %> |
| `server`  | string | The name of the server on which to create the database. The server name is from `server_credentials`. <%# Clarification needed %> | |
| `server_credentials` | JSON | A list of server credentials on which databases can be created, *server* must match one of *name*. <%# Clarification needed %>  Format: <pre><code>{ "NAME-1": { "server_name":"...", "server_resource_group":"...", "admin_username":"...", "admin_password":"..."}, "NAME-2":{"server_name":..., ...}...}</code></pre>
| `azure_tenant_id` | string | The ID of the Azure tenant for the service instance. | Config file value `azure.tenant_id` <%# Which config file? %> |
| `azure_subscription_id` | string | The ID of the Azure subscription for the service instance. | Config file value `azure.subscription_id` <%# Which config file? %> |
| `azure_client_id` | string | The ID of the Azure service principal to authenticate for service instance creation. <%# Clarification needed %> | Config file value `azure.client_id` <%# Which config file? %> |
| `azure_client_secret` | string | The secret (password) for the Azure service principal to authenticate for instance creation. | Config file value `azure.client_secret` <%# Which config file? %> |
| `sku_name` | string | The Azure stock-keeping unit (SKU). This is usually formatted as `TIER_FAMILY_NUMBER-OF-CORES`. Where: <ul><li>Examples of `TIER` are `GP_S`, `GP`, `BC`, and `HS`</li><li>Examples of `FAMILY` are `Gen4` and `Gen5`</li></ul> Example SKUs are, `GP_S_Gen4_1`, `GP_Gen5_8`. Will be computed from cores if empty. <%# Clarification needed %> Run `az sql db list-editions -l LOCATION -o table` to show all valid values. <%# Clarification needed %> For more information about the the vCore purchasing model, see the [Microsoft documentation](https://docs.microsoft.com/en-us/azure/azure-sql/database/resource-limits-vcore-single-databases). For more information about the the DTU purchasing model, see the [Microsoft documentation](https://docs.microsoft.com/en-us/azure/azure-sql/database/resource-limits-dtu-single-databases).  | |
| `skip_provider_registration` | boolean | Set to `true` to skip automatic Azure provider registration. Set if the service principal being used does not have the rights to register providers. | `false` |

<p class="note">
  <strong>Note:</strong> Azure SQL service instances use the vCore model and the Gen5
  hardware generation unless you override this default using the <code>sku_name</code> parameter.
  For more information about the vCore model, see the
  <a href="https://docs.microsoft.com/en-us/azure/sql-database/sql-database-service-tiers-vcore?tabs=azure-portal">Microsoft documentation</a>.
</p>

For the CPU/memory size mapped onto Azure SKUs, see the
[Microsoft documentation](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-vcore-resource-limits-single-databases).

#### Core to SKU Mapping

The table below shows the mapping of number of cores to the corresponding SKU:

| Cores | SKU |
|-------|-----|
| 1  | GP_Gen5_1 |
| 2  | GP_Gen5_2 |
| 4  | GP_Gen5_4 |
| 8  | GP_Gen5_8  |
| 16 | GP_Gen5_16 |
| 32 | GP_Gen5_32 |
| 80 | GP_Gen5_80 |
<%# Is this table necessary? Can we get this information from the link above? %>

<p class="note">
  <strong>Note:</strong> For the command <code>cf update-service -p PLAN-NAME</code> to work,
  the SKUs must be the same family
  <%# Clarification needed. SKUs for which things? Are these the only Compatible families? %>
  (<code>GP_S</code>, <code>GP</code>, or <code>HS</code>),
  otherwise Azure refuses the update request.
</p> <%# would this note be better in the sku_name row of the table? %>

### <a id="azure-mssql-db-global-defaults"></a> Configure Global Defaults

You might want to configure `server_credentials` for developers to use.

<%# See [configuration documentation](./configuration.md) and
[Azure installation documentation](azure-installation.md) for reference.
-- Need proper link for configuration.md and azure-installation.md and further clarification. %>

To globally configure `server_credentials`, include the following in the configuration file for the broker: <%# Where is this config file? %>

```yaml
service:
  csb-azure-mssql-db:
    provision:
      defaults: '{
        "server_credentials": {
          "server1": {
            "admin_username":"...",
            "admin_password":"...",
            "server_name":"...",
            "server_resource_group":..."
          },
          "server2": {
            "admin_username":"...",
            ...
          }
        }
      }'
```
<%# Should there be placeholders where ... is %>

Developers can create a new failover group database on `server1` by running, for example:

<pre class="terminal">$ cf create-service csb-azure-mssql-db medium medium-sql -c '{"server":"server1"}'</pre>
<%# This seems like a dev procedure. Is there a better place for this? %>

### <a id="azure-mssql-db-binding-creds"></a> Binding Credentials

The format for binding credentials for an Azure SQL database is as follows:

```json
{
    "name" : "DATABASE-NAME",
    "hostname" : "DATABASE-SERVER-HOST",
    "port" : "DATABASE-SERVER-PORT",
    "username" : "AUTHENTICATION-USERNAME",
    "password" : "AUTHENTICATION-PASSWORD",
    "uri" : "DATABASE-CONNECTION-URI",
    "jdbcUrl" : "JDBC-FORMAT-CONNECTION-URI",
    "sqldbName" : "DATABASE-NAME",
    "sqlServerName" : "SERVER-NAME",
    "sqlServerFullyQualifiedDomainName" : "SERVER-FQDN",
    "databaseLogin" : "AUTHENTICATION-USERNAME",
    "databaseLoginPassword" : "AUTHENTICATION-PASSWORD"
}
```
<%# Does this need the placeholders explained? %>



## <a id="azure-mssql-server"></a> Azure SQL (MSSQL) Server

This section applies to the csb-azure-mssql-server service.
The csb-azure-mssql-server service manages stand alone Azure SQL server service instances on Azure.
No databases are created or managed.

### <a id="azure-mssql-server-plans"></a> Plans

The only plan is `standard`.

### <a id="azure-mssql-server-provision"></a> Provision Parameters

You can provision a service by running:

```
cf create-service csb-azure-mssql-server standard ... -c '{...}'
```
<%# Could this be moved to a generic section about provisioning a service?
Should the ... be replaced by a placeholder?
Should you use the parameters in the -c flag?
Can we have an example? %>

The table below lists the parameters you can configure when provisioning a csb-azure-mssql-server service:

| Parameter Name | Type | Description | Default |
|----------------|------|-------------|---------|
| `instance_name` | string | instance name for server | `csb-azsql-svr-INSTANCE-ID` |
| `resource_group` | string | resource group for the server | `rg-INSTANCE-NAME` |
| `admin_username` | string | admin username for server | randomly generated string |
| `admin_password` | string | admin password for server | randomly generated string |
| `location` | string | Azure location to create server | `westus` |
| `azure_tenant_id` | string | ID of Azure tenant for instance | Config file value: `azure.tenant_id` |
| `azure_subscription_id` | string | ID of Azure subscription for instance | Config file value: `azure.subscription_id` |
| `azure_client_id` | string | ID of Azure service principal to authenticate for instance creation | Config file value: `azure.client_id` |
| `azure_client_secret` | string | Secret (password) for Azure service principal to authenticate for instance creation | Config file value: `azure.client_secret` |
| `authorized_network` | string | The Azure subnet ID (long form) that the instance is connected to through a service endpoint. The subnet must have the `Microsoft.sql` service enabled. | |
| `skip_provider_registration` | boolean | `true` to skip automatic Azure provider registration, set if service principal being used does not have rights to register providers | `false` |

### <a id="azure-mssql-server-binding-creds"></a> Binding Credentials

The format for binding credentials for Azure SQL Server is as follows:

```json
{
    "hostname" : "DATABASE-SERVER-HOST",
    "port" : "DATABASE-SERVER-PORT",
    "username" : "AUTHENTICATION-USERNAME",
    "password" : "AUTHENTICATION-PASSWORD",
    "sqlServerName" : "SERVER-NAME",
    "sqldbResourceGroup" : "RESOURCE-GROUP-FOR-SERVER",
    "sqlServerFullyQualifiedDomainName" : "SERVER-FQDN",
    "databaseLogin" : "AUTHENTICATION-USERNAME",
    "databaseLoginPassword" : "AUTHENTICATION-PASSWORD"
}
```
<%# Do we need to define the placeholders here? %>



## <a id="azure-mssql-fog"></a> Azure SQL (MSSQL) Failover Group

This section applies to the csb-azure-mssql-failover-group service.
This section lists the default plans and configuration options for Azure SQL Failover Group on Azure.

### <a id="azure-mssql-fog-plans"></a> Plans

The table below lists the plans for the csb-azure-mssql-failover-group service:

| Plan       | CPUs | Storage Size |
|------------|------|--------------|
| small       | 2    | 50&nbsp;GB       |
| medium      | 8    | 200&nbsp;GB       |
| large       | 32   | 500&nbsp;GB       |

### <a id="azure-mssql-fog-config-options"></a> Configuration Options

The table below lists the options you can configure:

| Option Name | Values              | Default |
|-------------|---------------------|---------|
| max_storage_gb  |             | 50      |
| cores       | 1&ndash;64, multiple of 2 | 2       |

Except as noted below, the configuration is generally the same as for [Azure SQL](#azure-mssql) above. <%# Which cofiguration is this referring to? %>

### <a id="azure-mssql-fog-provision"></a> Provision Parameters

The table below lists the parameters you can configure when provisioning a csb-azure-mssql-failover-group service:

| Parameter | Type | Description |Default |
|-----------|--------|------------|--------|
| instance_name  |string| service instance name | csb-azsql-*instance_id* |
| resource_group |string| resource group for instance<%# |for example| is preferred. %> | rg-*instance_name* |
| location  |string|Azure location to deploy service instance | westus |
| failover_location |string| Azure location for failover instance | `DEFAULT-REGIONAL-PAIR`, see the [Microsoft Documentation](https://docs.microsoft.com/en-us/azure/best-practices-availability-paired-regions#azure-regional-pairs) |
| read_write_endpoint_failover_policy | string | Read/Write failover policy - `Automatic` or `Manual` | `Automatic` |
| failover_grace_minutes | number | grace period in minutes before failover with data loss is attempted | 60 |
| azure_tenant_id | string | ID of Azure tenant for instance<%# |for example| is preferred. %> | config file value `azure.tenant_id` |
| azure_subscription_id | string | ID of Azure subscription for instance<%# |for example| is preferred. %> | config file value `azure.subscription_id` |
| azure_client_id | string | ID of Azure service principal to authenticate for instance<%# |for example| is preferred. %> creation | config file value `azure.client_id` |
| azure_client_secret | string | Secret (password) for Azure service principal to authenticate for instance<%# |for example| is preferred. %> creation | config file value `azure.client_secret` |
| sku_name | string | Azure sku (typically, tier [GP_S,GP,BC,HS] + family [Gen4,Gen5] + cores, e.g. <%# |For example| is preferred. %>G<%# Write all ordered steps as numbers. %>P_S_Gen4_1, GP_Gen5_8, see [vCore](https://docs.microsoft.com/en-us/azure/azure-sql/database/resource-limits-vcore-single-databases) and [DTU](https://docs.microsoft.com/en-us/azure/azure-sql/database/resource-limits-dtu-single-databases))<%# The link name must be |Microsoft documentation|. %> Will be computed from cores if empty. `az sql db list-editions -l <location> -o table` will<%# Avoid |will|: present tense is preferred. %> show all valid values. | |
| authorized_network | string | The Azure subnet ID (long form) that the instance is connected to via<%# |through|, |using| and |by means of| are preferred. %> a service endpoint. The subnet must have the `Microsoft.sql` service enabled. | |
| skip_provider_registration | boolean | `true` to skip automatic Azure provider registration, set if service principal being used does not have rights to register providers | `false` |

<p class="note">
  <strong>Note:</strong> Currently Azure SQL is not available in all regions.
  <%# The enum in the YAML lists all the valid regions as of 2/12/2020. --  Which YAML? %>
</p>

<p class="note">
  <strong>Note:</strong> Azure SQL service instances use the vCore model and the Gen5
  hardware generation unless you override this default using the <code>sku_name</code> parameter.
  For more information about the vCore model, see the
  <a href="https://docs.microsoft.com/en-us/azure/sql-database/sql-database-service-tiers-vcore?tabs=azure-portal">Microsoft documentation</a>.
</p>

For the CPU/memory size mapped onto Azure SKUs, see the
[Microsoft documentation](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-vcore-resource-limits-single-databases).

#### Core to SKU Mapping

The table below shows the mapping of number of cores to the corresponding SKU:

| Cores | SKU |
|-------|-----|
| 1  | GP_Gen5_1 |
| 2  | GP_Gen5_2 |
| 4  | GP_Gen5_4 |
| 8  | GP_Gen5_8  |
| 16 | GP_Gen5_16 |
| 32 | GP_Gen5_32 |
| 80 | GP_Gen5_80 |
<%# Is this table necessary? Can we get this information from the link above? %>

<p class="note">
  <strong>Note:</strong> For the command <code>cf update-service -p PLAN-NAME</code> to work,
  the SKUs must be the same family
  <%# Clarification needed. SKUs for which things? Are these the only Compatible families? %>
  (<code>GP_S</code>, <code>GP</code>, or <code>HS</code>),
  otherwise Azure refuses the update request.
</p> <%# would this note be better in the sku_name row of the table? %>

### <a id="azure-mssql-fog-binding-creds"></a> Binding Credentials

The format for binding credentials for Azure SQL Failover Group is as follows:

```json
{
    "name" : "DATABASE-NAME",
    "hostname" : "DATABASE-SERVER-HOST",
    "port" : "DATABASE-SERVER-PORT",
    "username" : "AUTHENTICATION-USERNAME",
    "password" : "AUTHENTICATION-PASSWORD",
    "uri" : "DATABASE-CONNECTION-URI",
    "jdbcUrl" : "JDBC-FORMAT-CONNECTION-URI",
    "sqldbName" : "DATABASE-NAME",
    "sqlServerName" : "SERVER-NAME",
    "sqlServerFullyQualifiedDomainName" : "SERVER-FQDN",
    "databaseLogin" : "AUTHENTICATION-USERNAME",
    "databaseLoginPassword" : "AUTHENTICATION-PASSWORD"
}
```<%# Define any non-obvious placeholders present in the code snippet in the style of |Where PLACEHOLDER is...| %>

### <a id="azure-mssql-fog-secondry-db"></a> About the Secondary Database Created by the Failover Group

Because the secondary (failover) database is implicitly created when the failover
group is created, the broker does not currently gain any control over that database instance.
This manifests itself when a `cf update` is executed on the failover group.
Changes to the SKU and other parameters are not propagated to the secondary database.
The current workaround is to subsume control of the secondary database instance
that can then be managed with the cf CLI.

#### <a id="azure-mssql-fog-secondry-db"></a> Gain Control of the Secondary Database Instance

To subsume control over the secondary database: <%# Procedure needs improvement %>

1. Retrieve the secondary database ID from the output of the following command: <%# Where is the DB ID in this output? %>

    ```
    cf service FOG-INSTANCE
    ```

    <pre class="terminal">$ cf service example-fog
    Showing info of service example-fog in org pivotal / space ernie as admin...

    name:            example-fog
    service:         csb-azure-mssql-failover-group
    tags:
    plan:            small
    description:     Manages auto failover group for managed Azure SQL on the Azure Platform
    documentation:   https://docs.microsoft.com/en-us/azure/sql-database/sql-database-auto-failover-group/
    dashboard:

    Showing status of last operation from service example-fog...

    status:    create succeeded
    message:   created failover group csb-azsql-fog-8fa66105-2796-4bed-a2a3-d1691fbba143 (id:
               /subscriptions/899bf076-632b-4143-b015-43da8179e53f/resourceGroups/broker-cf-test/providers/Microsoft.Sql/servers/csb-azsql-fog-8fa66105-2796-4bed-a2a3-d1691fbba143-primary/failoverGroups/csb-azsql-fog-8fa66105-2796-4bed-a2a3-d1691fbba143), primary db csb-db (id:
               /subscriptions/899bf076-632b-4143-b015-43da8179e53f/resourceGroups/broker-cf-test/providers/Microsoft.Sql/servers/csb-azsql-fog-8fa66105-2796-4bed-a2a3-d1691fbba143-primary/databases/csb-db) on server csb-azsql-fog-8fa66105-2796-4bed-a2a3-d1691fbba143-primary (id:
               /subscriptions/899bf076-632b-4143-b015-43da8179e53f/resourceGroups/broker-cf-test/providers/Microsoft.Sql/servers/csb-azsql-fog-8fa66105-2796-4bed-a2a3-d1691fbba143-primary), secondary db csb-db (id:
               /subscriptions/899bf076-632b-4143-b015-43da8179e53f/resourceGroups/broker-cf-test/providers/Microsoft.Sql/servers/csb-azsql-fog-8fa66105-2796-4bed-a2a3-d1691fbba143-secondary/databases/csb-db) on server csb-azsql-fog-8fa66105-2796-4bed-a2a3-d1691fbba143-secondary (id:
               /subscriptions/899bf076-632b-4143-b015-43da8179e53f/resourceGroups/broker-cf-test/providers/Microsoft.Sql/servers/csb-azsql-fog-8fa66105-2796-4bed-a2a3-d1691fbba143-secondary) URL:
               https://portal.azure.com/#@29248f74-371f-4db2-9a50-c62a6877a0c1/resource/subscriptions/899bf076-632b-4143-b015-43da8179e53f/resourceGroups/broker-cf-test/providers/Microsoft.Sql/servers/csb-azsql-fog-8fa66105-2796-4bed-a2a3-d1691fbba143-primary/failoverGroup
    started:   2020-09-21T18:43:51Z
    updated:   2020-09-21T18:49:04Z

    There are no bound apps for this service.
    </pre>

1. Subsume control of the database instance by running: <%# What is the generic command here? %>

    For example:
    <pre class="terminal">
    $ cf create-service csb-masb-mssql-db-subsume current secondary-db -c '{"azure_db_id":"/subscriptions/899bf076-632b-4143-b015-43da8179e53f/resourceGroups/broker-cf-test/providers/Microsoft.Sql/servers/csb-azsql-fog-8fa66105-2796-4bed-a2a3-d1691fbba143-secondary/databases/csb-db"}'
    Creating service instance secondary-db in org pivotal / space ernie as admin...
    OK

    Create in progress. Use 'cf services' or 'cf service secondary-db' to check operation status.

    Attention: The plan `current` of service `csb-masb-mssql-db-subsume` is not free.  The instance `secondary-db` will incur a cost.  Contact your administrator if you think this is in error.
    </pre>

The secondary database is now under Cloud Foundry control and you can use `cf update`
to modify its configuration.



## <a id="azure-mssql-fog-preconfig"></a> Pre-configured Server Pairs for Azure SQL (MSSQL) Failover Groups

This section applies to the csb-azure-mssql-db-failover-group service, which manages
Azure SQL Failover Group databases on pre-configured server pairs on Azure.
If the customer already has a failover group database server pre-configured,
they should use this service instead of the more general Azure SQL Failover Group service.

### <a id="azure-mssql-fog-preconfig-plans"></a> Plans

The table below lists the plans for the csb-azure-mssql-db-failover-group service:

| Plan       | CPUs | Storage Size |
|------------|------|--------------|
|small       | 2    | 50&nbsp;GB         |
|medium      | 8    | 200&nbsp;GB        |
|large       | 32   | 500&nbsp;GB        |
|existing    | n/a  | n/a          |

The `existing` plan connects to an existing failover group database to allow apps,
typically in a second foundation, to bind to the database.

### <a id="azure-mssql-fog-preconfig-plans-config"></a> Plan Configuration Parameters

The table below lists the plan parameters you can configure:

| Parameter Name | Values           | Default |
|-------------|---------------------|---------|
| max_storage_gb  |             | 50      |
| cores       | 1&ndash;64, multiple of 2 | 2       |

### <a id="azure-mssql-fog-preconfig-provision"></a> Provision Parameters

You can provision a service by running:

```
cf create-service csb-azure-mssql-db-failover-group ... -c '{...}'
```
<%# Could this be moved to a generic section about provisioning a service?
Should the ... be replaced by a placeholder?
Should you use the parameters in the -c flag?
Can we have an example? %>

The table below lists the parameters you can configure when provisioning a csb-azure-mssql-db-failover-group service:

| Parameter Name | Type | Description | Default |
|----------------|------|-------------|---------|
| instance_name | string | instance name for failover group | csb-azsql-fog-*instance_id* |
| db_name | string | database name | csb-fog-db-*instance_id* |
| server_pair | string | server pair from *server_credential_pairs* on which to create failover DB<%# |database| is preferred. %> | |
| server_credential_pairs | JSON | list of server pairs on which failover DB<%# |database| is preferred. %>'s can be<%# Consider switching to active voice. %> created, *server_pair* must match one of *name*. Format: `{ "name": { "admin_username":"...", "admin_password":"...", "primary":{"server_name":"...", "resource_group":..."}, "secondary":{"server_name":"...", "resource_group":..."}, ...}`| |
| read_write_endpoint_failover_policy | string | Read/Write failover policy - `Automatic` or `Manual` | `Automatic` |
| failover_grace_minutes | number | grace period in minutes before failover with data loss is attempted | 60 |
| azure_tenant_id | string | ID of Azure tenant for instance<%# |for example| is preferred. %> | config file value `azure.tenant_id` |
| azure_subscription_id | string | ID of Azure subscription for instance<%# |for example| is preferred. %> | config file value `azure.subscription_id` |
| azure_client_id | string | ID of Azure service principal to authenticate for instance<%# |for example| is preferred. %> creation | config file value `azure.client_id` |
| azure_client_secret | string | Secret (password) for Azure service principal to authenticate for instance<%# |for example| is preferred. %> creation | config file value `azure.client_secret` |
| sku_name | string | Azure sku (typically, tier [GP_S,GP,BC,HS] + family [Gen4,Gen5] + cores, e.g. <%# |For example| is preferred. %>G<%# Write all ordered steps as numbers. %>P_S_Gen4_1, GP_Gen5_8, see [vCore](https://docs.microsoft.com/en-us/azure/azure-sql/database/resource-limits-vcore-single-databases) and [DTU](https://docs.microsoft.com/en-us/azure/azure-sql/database/resource-limits-dtu-single-databases))<%# The link name must be |Microsoft documentation|. %> Will be computed from cores if empty. `az sql db list-editions -l <location> -o table` will<%# Avoid |will|: present tense is preferred. %> show all valid values. | |
| skip_provider_registration | boolean | `true` to skip automatic Azure provider registration, set if service principal being used does not have rights to register providers | `false` |

<p class="note">
  <strong>Note:</strong> Azure SQL service instances use the vCore model and the Gen5
  hardware generation unless you override this default using the <code>sku_name</code> parameter.
  For more information about the vCore model, see the
  <a href="https://docs.microsoft.com/en-us/azure/sql-database/sql-database-service-tiers-vcore?tabs=azure-portal">Microsoft documentation</a>.
</p>

For the CPU/memory size mapped onto Azure SKUs, see the
[Microsoft documentation](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-vcore-resource-limits-single-databases).

#### Core to SKU Mapping

The table below shows the mapping of number of cores to the corresponding SKU:

| Cores | SKU |
|-------|-----|
| 1  | GP_Gen5_1 |
| 2  | GP_Gen5_2 |
| 4  | GP_Gen5_4 |
| 8  | GP_Gen5_8  |
| 16 | GP_Gen5_16 |
| 32 | GP_Gen5_32 |
| 80 | GP_Gen5_80 |
<%# Is this table necessary? Can we get this information from the link above? %>

### <a id="azure-mssql-fog-preconfig-global-defaults"></a> Configure Global Defaults

You might want to configure `server_credential_pairs` for developers to use.

<%# See [configuration documentation](./configuration.md) and
[Azure installation documentation](azure-installation.md) for reference.
-- Need proper link for configuration.md and azure-installation.md and further clarification. %>

To globally configure `server_credential_pairs`, include the following in the configuration file for the broker: <%# Where is this config file? %>

```yaml
service:
  csb-azure-mssql-db-failover-group:
    provision:
      defaults: '{
        "server_credential_pairs": {
          "pair1": {
            "admin_username":"...",
            "admin_password":"...",
            "primary": {
              "server_name":"...",
              "resource_group":..."
            },
            "secondary": {
              "server_name":"...",
              "resource_group":..."
            },
          "pair2": {
            "admin_username":"...",
            ...
          }
        }
      }'
```
<%# Should there be placeholders where ... is %>

Developers can create a new failover group database on `pair1` by running:

For example:
<pre class="terminal">$ cf create-service csb-azure-mssql-db-failover-group medium medium-fog -c '{"server_pair":"pair1"}'</pre>
<%# Is there a better place for this? %>

To allow multiple foundations to connect to a single database, for example, for
foundations in primary and secondary failover locations, the same server credential
pairs must be configured in each foundation.

To do so, developers can:

1. Create a failover group database in one foundation by running:

    For example:
    <pre class="terminal">$ cf create-service csb-azure-mssql-db-failover-group medium medium-fog -c '{"server_pair":"pair1", "instance_name":"fog-instance","db_name":"db"}'</pre>

1. Connect to that database in the second foundation by running:

    For example:
    <pre class="terminal">$ cf create-service csb-azure-mssql-db-failover-group existing medium-fog -c '{"server_pair":"pair1","instance_name": "csb-failover-group-test", "db_name":"test-db"}'</pre>

### <a id="azure-mssql-fog-preconfig-binding-creds"></a> Binding Credentials<%# Make this header an anchor unless the subnav is unusually long. %>

The format for binding credentials for Azure SQL Failover Group is as follows:

```json
{
    "name" : "DATABASE-NAME",
    "hostname" : "DATABASE-SERVER-HOST",
    "port" : "DATABASE-SERVER-PORT",
    "username" : "AUTHENTICATION-USERNAME",
    "password" : "AUTHENTICATION-PASSWORD",
    "uri" : "DATABASE-CONNECTION-URI",
    "jdbcUrl" : "JDBC-FORMAT-CONNECTION-URI",
    "sqldbName" : "DATABASE-NAME",
    "sqlServerName" : "SERVER-NAME",
    "sqlServerFullyQualifiedDomainName" : "SERVER-FQDN",
    "databaseLogin" : "AUTHENTICATION-USERNAME",
    "databaseLoginPassword" : "AUTHENTICATION-PASSWORD"
}
```<%# Define any non-obvious placeholders present in the code snippet in the style of |Where PLACEHOLDER is...| %>

### <a id="azure-mssql-fog-preconfig-secondry-db"></a> About the Secondary Database Created by the Failover Group

Because the secondary (failover) database is implicitly created when the failover
group is created, the broker does not currently gain any control over that database instance.
This manifests itself when a `cf update` or `cf delete-service` is executed on the failover group.
Changes to the SKU and other parameters are not propagated to the secondary database.
The current workaround is to subsume control of the secondary database instance
that can then be managed with the cf CLI.

#### <a id="azure-mssql-fog-preconfig-secondry-db"></a> Gain Control of the Secondary Database Instance

To subsume control over the secondary database: <%# Procedure needs improvement %>

1. Retrieve the secondary database ID from the output of the following command: <%# Where is the DB ID in this output? %>

    ```
    cf service FOG-INSTANCE
    ```

    <pre class="terminal">$ cf service example-fog
    Showing info of service example-fog in org pivotal / space ernie as admin...

    name:            example-fog
    service:         csb-azure-mssql-failover-group
    tags:
    plan:            small
    description:     Manages auto failover group for managed Azure SQL on the Azure Platform
    documentation:   https://docs.microsoft.com/en-us/azure/sql-database/sql-database-auto-failover-group/
    dashboard:

    Showing status of last operation from service example-fog...

    status:    create succeeded
    message:   created failover group csb-azsql-fog-8fa66105-2796-4bed-a2a3-d1691fbba143 (id:
               /subscriptions/899bf076-632b-4143-b015-43da8179e53f/resourceGroups/broker-cf-test/providers/Microsoft.Sql/servers/csb-azsql-fog-8fa66105-2796-4bed-a2a3-d1691fbba143-primary/failoverGroups/csb-azsql-fog-8fa66105-2796-4bed-a2a3-d1691fbba143), primary db csb-db (id:
               /subscriptions/899bf076-632b-4143-b015-43da8179e53f/resourceGroups/broker-cf-test/providers/Microsoft.Sql/servers/csb-azsql-fog-8fa66105-2796-4bed-a2a3-d1691fbba143-primary/databases/csb-db) on server csb-azsql-fog-8fa66105-2796-4bed-a2a3-d1691fbba143-primary (id:
               /subscriptions/899bf076-632b-4143-b015-43da8179e53f/resourceGroups/broker-cf-test/providers/Microsoft.Sql/servers/csb-azsql-fog-8fa66105-2796-4bed-a2a3-d1691fbba143-primary), secondary db csb-db (id:
               /subscriptions/899bf076-632b-4143-b015-43da8179e53f/resourceGroups/broker-cf-test/providers/Microsoft.Sql/servers/csb-azsql-fog-8fa66105-2796-4bed-a2a3-d1691fbba143-secondary/databases/csb-db) on server csb-azsql-fog-8fa66105-2796-4bed-a2a3-d1691fbba143-secondary (id:
               /subscriptions/899bf076-632b-4143-b015-43da8179e53f/resourceGroups/broker-cf-test/providers/Microsoft.Sql/servers/csb-azsql-fog-8fa66105-2796-4bed-a2a3-d1691fbba143-secondary) URL:
               https://portal.azure.com/#@29248f74-371f-4db2-9a50-c62a6877a0c1/resource/subscriptions/899bf076-632b-4143-b015-43da8179e53f/resourceGroups/broker-cf-test/providers/Microsoft.Sql/servers/csb-azsql-fog-8fa66105-2796-4bed-a2a3-d1691fbba143-primary/failoverGroup
    started:   2020-09-21T18:43:51Z
    updated:   2020-09-21T18:49:04Z

    There are no bound apps for this service.
    </pre>

1. Subsume control of the database instance by running: <%# What is the generic command here? %>

    For example:
    <pre class="terminal">
    $ cf create-service csb-masb-mssql-db-subsume current secondary-db -c '{"azure_db_id":"/subscriptions/899bf076-632b-4143-b015-43da8179e53f/resourceGroups/broker-cf-test/providers/Microsoft.Sql/servers/csb-azsql-fog-8fa66105-2796-4bed-a2a3-d1691fbba143-secondary/databases/csb-db"}'
    Creating service instance secondary-db in org pivotal / space ernie as admin...
    OK

    Create in progress. Use 'cf services' or 'cf service secondary-db' to check operation status.

    Attention: The plan `current` of service `csb-masb-mssql-db-subsume` is not free.  The instance `secondary-db` will incur a cost.  Contact your administrator if you think this is in error.
    </pre>

The secondary database is now under Cloud Foundry control and you can use `cf update`
to modify its configuration.



## <a id="azure-mssql-fog-runner"></a> Azure SQL Failover Group Failover Runner

This section applies to the csb-azure-mssql-fog-run-failover service.

The csb-azure-mssql-fog-run-failover service is a pseudo-service that upon
provisioning causes a failover group secondary server to become the primary.
Upon de-provisioning, the failover is undone and the original primary server
once again becomes the primary.

### <a id="azure-mssql-fog-runner-plans"></a> Plans

The only plan is `standard`.

### <a id="azure-mssql-fog-runner-provision"></a> Provision Parameters

You can provision a service by running:

```
cf create-service csb-azure-mssql-fog-run-failover standard ... -c '{...}'
```
<%# Could this be moved to a generic section about provisioning a service?
Should the ... be replaced by a placeholder?
Should you use the parameters in the -c flag?
Can we have an example? %>

The table below lists the parameters you can configure when provisioning a csb-azure-mssql-fog-run-failover service:

| Parameter Name | Type | Description | Default |
|----------------|------|-------------|---------|
| fog_instance_name | string | instance name for failover group to target |
| server_pair_name | string | server pair from *server_pairs* |
| server_pairs | JSON | list of failover group server pairs, *server_pair* must match one of *name*. Format: `{ "name": { "primary":{"server_name":"...", "resource_group":..."}, "secondary":{"server_name":"...", "resource_group":..."}, ...}` |
| azure_tenant_id | string | ID of Azure tenant for instance<%# |for example| is preferred. %> | config file value `azure.tenant_id` |
| azure_subscription_id | string | ID of Azure subscription for instance<%# |for example| is preferred. %> | config file value `azure.subscription_id` |
| azure_client_id | string | ID of Azure service principal to authenticate for instance<%# |for example| is preferred. %> creation | config file value `azure.client_id` |
| azure_client_secret | string | Secret (password) for Azure service principal to authenticate for instance<%# |for example| is preferred. %> creation | config file value `azure.client_secret` |
| skip_provider_registration | boolean | `true` to skip automatic Azure provider registration, set if service principal being used does not have rights to register providers | `false` |

### <a id="azure-mssql-fog-runner-binding-creds"></a> Binding Credentials

There are no binding credentials for this service.



## <a id="azure-postgresql"></a> Azure PostgreSQL

This section applies to the csb-azure-postgresql service.
This section lists the default plans and configuration options for PostgreSQL on Azure.

### <a id="azure-postgresql-plans"></a> Plans

The table below lists the plans for the csb-azure-postgresql service:

| Plan | Version | CPUs | Memory Size | Disk Size |
|------|---------|------|-------------|-----------|
|small | 11      | 2    | minimum 4&nbsp;GB    | 5&nbsp;GB       |
|medium| 11      | 4    | minimum 8&nbsp;GB    | 10&nbsp;GB      |
|large | 11      | 8    | minimum 16&nbsp;GB   | 20&nbsp;GB     |

### <a id="azure-postgresql-config-options"></a> Configuration Options

The table below lists the options you can configure across all supported platforms:

| Option Name | Values | Default |
|-------------|--------|---------|
| postgres_version | 9.5, 9.6, 10, 11 | 11    |
| storage_gb  | 5 - 4096| 5      |
| cores       | 1,2,4,8,16,32,64 | 1      |
| db_name     | | csb-db |

### <a id="azure-postgresql-platform-provision"></a> Platform Specific Configuration Parameters

Notes below document platform specific information for mapping that might be required.

The following table lists the CPU/memory size mapped onto Azure SKUs:

| Plan   | Sku       |
|--------|-----------|
| small  | GP_Gen5_2 |
| medium | GP_Gen5_4 |
| large  | GP_Gen5_8 |

For more information about the pricing tiers in Azure Database for PostgreSQL, see the
[Microsoft documentation](https://docs.microsoft.com/en-us/azure/postgresql/concepts-pricing-tiers)

<p class="note">
  <strong>Note:</strong>the maximum vCores is dependent on the Service Tier.
  <code>B_</code> = Basic, <code>GP_</code> = General Purpose, and <code>MO_</code> = Memory Optimized.
  See below for details.
</p>

<%# Note: the same family (B, GP, or MO.) Otherwise Azure will refuse the update request. %>

<p class="note">
  <strong>Note:</strong> For the command <code>cf update-service -p PLAN-NAME</code> to work, the SKUs must be the same family <%# this line was copied from above. is it correct? %>
  <%# Clarification needed. SKUs for which things? Are these the only Compatible families? %>
  (<code>B</code>, <code>GP</code>, or <code>MO</code>),
  otherwise Azure refuses the update request.
</p> <%# would this note be better in the sku_name row of the table? %>

#### Storage

Storage auto grow is enabled on Azure.
For more information about storage auto grow, see the
[Microsoft documentation](https://docs.microsoft.com/en-us/azure/postgresql/concepts-pricing-tiers#storage-auto-grow)
Initial storage sizes are per plan.

#### Core to SKU Mapping

The table below shows the mapping of number of cores to the corresponding SKU:

| Cores | Instance class |
|-------|----------------|
| 1     | GP_Gen5_1      |
| 2     | GP_Gen5_2      |
| 4     | GP_Gen5_4      |
| 8     | GP_Gen5_8      |
| 16    | GP_Gen5_16     |
| 32    | GP_Gen5_32     |
| 64    | GP_Gen5_64     |
<%# Is this table necessary? Can we link to this information in the Microsoft docs? %>

### <a id="azure-postgresql-azure-provision"></a> Azure Specific Configuration Parameters

You can provision a service by running:

```
cf create-service csb-azure-postgresql ... -c '{...}'
```
<%# Could this be moved to a generic section about provisioning a service?
Should the ... be replaced by a placeholder?
Should you use the parameters in the -c flag?
Can we have an example? %>

The table below lists the parameters you can configure, as well as those in
[Platform Specific Configuration Parameters](#azure-postgresql-platform-provision)
above, when provisioning a csb-azure-postgresql service:

| Parameter | Type | Description | Default |
|-----------|------|-------------|---------|
| instance_name | string | name of Azure instance to create | csb-mysql-*instance_id* |
| location  | string |Azure location to deploy service instance | westus |
| resource_group | string |The Azure resource group in which to create the instance | rg-*instance_name* |
| azure_tenant_id | string | ID of Azure tenant for instance<%# |for example| is preferred. %> | config file value `azure.tenant_id` |
| azure_subscription_id | string | ID of Azure subscription for instance<%# |for example| is preferred. %> | config file value `azure.subscription_id` |
| azure_client_id | string | ID of Azure service principal to authenticate for instance<%# |for example| is preferred. %> creation | config file value `azure.client_id` |
| azure_client_secret | string | Secret (password) for Azure service principal to authenticate for instance<%# |for example| is preferred. %> creation | config file value `azure.client_secret` |
| authorized_network  | string | Subnet ID (the long version) of the VNET/Subnet that is attached to this instance to allow remote access. By default no VNETs are allowed access. ||
| sku_name | string |[Azure sku](https://docs.microsoft.com/en-us/azure/mysql/concepts-pricing-tiers) (typically, tier [`B`,`GP`,`MO`] + family [`Gen4`,`Gen5`] + *cores*, e.g. `B_Gen4_1`, `GP_Gen5_8`)<%# The link name must be |Microsoft documentation|. %> *overrides* `cores` conversion into sku per table above
| use_tls | boolean |Use TLS for DB<%# |database| is preferred. %> connections | `true` |
| skip_provider_registration | boolean | `true` to skip automatic Azure provider registration, set if service principal being used does not have rights to register providers | `false` |

<p class="note">
  <strong>Note:</strong> Currently MySQL is not available in all regions. <%# Should this say PostgreSQL? %>
  <%# The enum in the YAML lists all the valid regions as of 2/12/2020. --  Which YAML? %>
</p>

### <a id="azure-mssql-binding-creds"></a> Binding Credentials

The format for binding credentials for PostgreSQL is as follows:

```json
{
    "name" : "DATABASE-NAME",
    "hostname" : "DATABASE-SERVER-HOST",
    "port" : "DATABASE-SERVER-PORT",
    "username" : "AUTHENTICATION-USERNAME",
    "password" : "AUTHENTICATION-PASSWORD",
    "uri" : "DATABASE-CONNECTION-URI",
    "jdbcUrl" : "JDBC-FORMAT-CONNECTION-URI"
}
```<%# Define any non-obvious placeholders present in the code snippet in the style of |Where PLACEHOLDER is...| %>



## <a id="azure-storage-account"></a> Azure Storage Account

This section applies to csb-azure-storage-account.
This section details the different plans and configurations for Azure Storage Account.

### <a id="azure-storage-account-plans"></a> Plans

The table below lists the plans for Azure Storage Account:

| Plan | Description |
|------|-------------|
| standard | General-purpose V2 account. Locally redundant, standard tier |

### <a id="azure-storage-account-provision"></a> Configuration Parameters

You can provision a service by running:

```
cf create-service csb-azure-storage-account ... -c '{...}'
```
<%# Could this be moved to a generic section about provisioning a service?
Should the ... be replaced by a placeholder?
Should you use the parameters in the -c flag?
Can we have an example? %>

The table below lists the parameters you can configure when provisioning a csb-azure-storage-account service:

| Parameter | Type | Description | Default |
|-----------|------|------|---------|
| storage_account_type | string | Account type - `BlobStorage`, `BlockBlobStorage`, `FileStorage`, `Storage`, `StorageV2` | `StorageV2` |
| tier | string | Storage tier to use - `Standard`, `Premium` | `Standard` |
| replication_type | string | Replication type - `LRS`, `GRS`, `RAGRS`, `ZRS` | `LRS` |
| location  | Azure location to deploy service instance | westus |
| resource_group | The Azure resource group in which to create the instance | rg-*account_name* (account_name is always generated) |
| azure_tenant_id | string | ID of Azure tenant for instance<%# |for example| is preferred. %> | config file value `azure.tenant_id` |
| azure_subscription_id | string | ID of Azure subscription for instance<%# |for example| is preferred. %> | config file value `azure.subscription_id` |
| azure_client_id | string | ID of Azure service principal to authenticate for instance<%# |for example| is preferred. %> creation | config file value `azure.client_id` |
| azure_client_secret | string | Secret (password) for Azure service principal to authenticate for instance<%# |for example| is preferred. %> creation | config file value `azure.client_secret` |
| skip_provider_registration | boolean | `true` to skip automatic Azure provider registration, set if service principal being used does not have rights to register providers | `false` |
| authorized_networks | list (string) | A list of resource ids for subnets of the Azure Vnet authorized | `[]`

### <a id="azure-storage-account-binding-creds"></a> Binding Credentials

The format for binding credentials for Azure Storage Account is as follows:

```json
{
    "storage_account_name" : "STORAGE-ACCOUNT-NAME",
    "primary_access_key" : "PRIMARY-ACCESS-KEY",
    "secondary_access_key" : "SECONDARY-ACCESS-KEY",
}
```
